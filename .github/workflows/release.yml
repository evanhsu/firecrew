name: "Promote to prod"

on:
  workflow_dispatch:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#release
  release:
    types: [published]

jobs:
  update-k8s-manifest:
    name: Update k8s manifest with release version
    runs-on: ubuntu-latest
    steps:
      # This workflow assumes that the GITHUB_SHA that triggered this action already has a Docker image tagged
      # in the Container Registry (presumably put there by the 'merge-to-main.yml' workflow)
      - name: Get short-sha
        id: shortsha
        run: echo "::set-output name=shortsha::$(echo $GITHUB_SHA | head -c7)"

      # Uses credentials from the evanhsu/AuthBot Github App (https://github.com/settings/installations/28169783)
      - id: deploy-pat
        uses: getsentry/action-github-app-token@v1
        with:
          app_id: ${{ secrets.AUTHBOT_APP_ID }}
          private_key: ${{ secrets.AUTHBOT_PRIVATE_KEY }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Update image tag in k8s deployment repo
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Update image tag
          repo: evanhsu/smirksoftware-k8s
          # Always trigger the target workflow on the main branch of the target repo
          ref: main
          token: ${{ steps.deploy-pat.outputs.token }}
          inputs: '{ "app": "firecrew", "environment": "prod", "image": "firecrew/firecrew-app", "tag": "${{ steps.shortsha.outputs.shortsha }}"}'

      - name: Add 'prod' tag to the docker image in the container registry
        run: |
          docker pull registry.digitalocean.com/firecrew/firecrew-app:${{ steps.shortsha.outputs.shortsha }}
          docker tag registry.digitalocean.com/firecrew/firecrew-app:${{ steps.shortsha.outputs.shortsha }} registry.digitalocean.com/firecrew/firecrew-app:prod
          docker push registry.digitalocean.com/firecrew/firecrew-app:prod

      - name: Delete unused images from container registry.
        run: |
          ALL_MANIFESTS=$(doctl registry repository list-manifests firecrew-app --format Digest,Tags --output json)
          STALE_MANIFESTS=$(echo $ALL_MANIFESTS | jq -c -r '. - map( select(.tags[] | contains("latest", "prod"))) | [.[].digest] | unique | join(" ")')
          [[ -n $STALE_MANIFESTS ]] && doctl registry repository delete-manifest firecrew-app $STALE_MANIFESTS --force
          echo Manifests removed: $STALE_MANIFESTS
